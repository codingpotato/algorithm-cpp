set(LEETCODE_SOURCES
    leetcode/array/contains_duplicate.cpp
    leetcode/array/duplicate_number.cpp
    leetcode/array/find_all_duplicates.cpp
    leetcode/array/find_all_numbers.cpp
    leetcode/array/first_positive.cpp
    leetcode/array/missing_number.cpp
    leetcode/array/product_array.cpp
    leetcode/array/single_number.cpp
    leetcode/backtracking/letter_case_permutation.cpp
    leetcode/backtracking/generate_parentheses.cpp
    leetcode/backtracking/permutations.cpp
    leetcode/backtracking/subsets.cpp
    leetcode/backtracking/subsets_II.cpp
    leetcode/bfs/average_levels.cpp
    leetcode/bfs/cheapest_flights.cpp
    leetcode/bfs/level_traversal.cpp
    leetcode/bfs/level_traversal_II.cpp
    leetcode/binary_search/binary_search.cpp
    leetcode/binary_search/find_first_last.cpp
    leetcode/binary_search/median.cpp
    leetcode/binary_search/peak_index.cpp
    leetcode/binary_search/search_rotated.cpp
    leetcode/binary_search/smallest_letter.cpp
    leetcode/design/LRU_cache.cpp
    leetcode/dfs/diameter.cpp
    leetcode/dfs/flood_fill.cpp
    leetcode/dfs/invert.cpp
    leetcode/dfs/lowest_common.cpp
    leetcode/dfs/lowest_common_ancestor.cpp
    leetcode/dfs/max_depth.cpp
    leetcode/dfs/maximum_tree.cpp
    leetcode/dfs/merge.cpp
    leetcode/dfs/min_depth.cpp
    leetcode/dfs/pacific_atlantic.cpp
    leetcode/dfs/path_sum.cpp
    leetcode/dfs/path_sum_II.cpp
    leetcode/dfs/same_tree.cpp
    leetcode/dfs/smallest_string.cpp
    leetcode/dfs/subtree.cpp
    leetcode/dfs/target_sum.cpp
    leetcode/dfs/validate_bst.cpp
    leetcode/dp/climbing_stairs.cpp
    leetcode/dp/edit_distance.cpp
    leetcode/dp/house_robber.cpp
    leetcode/dp/interleaving_string.cpp
    leetcode/dp/max_subarray.cpp
    leetcode/dp/range_sum_query.cpp
    leetcode/dp/stock_once.cpp
    leetcode/dp/unique_path_II.cpp
    leetcode/dp/word_break.cpp
    leetcode/hash_table/two_sum.cpp
    leetcode/heap/k_largest.cpp
    leetcode/heap/merge_k_sorted_list.cpp
    leetcode/interval/insert_interval.cpp
    leetcode/interval/intersection.cpp
    leetcode/interval/merge_intervals.cpp
    leetcode/linked_list/merge_sorted_list.cpp
    leetcode/linked_list/reverse.cpp
    leetcode/linked_list/reverse_II.cpp
    leetcode/linked_list/reverse_k_group.cpp
    leetcode/sliding_window/fruit_baskets.cpp
    leetcode/sliding_window/longest_substring.cpp
    leetcode/sliding_window/max_consecutive_one_III.cpp
    leetcode/sliding_window/minimum_subarray.cpp
    leetcode/trie/longest_word.cpp
    leetcode/two_pointers/backspace_string.cpp
    leetcode/two_pointers/linked_list_cycle.cpp
    leetcode/two_pointers/merge_sorted_list.cpp
    leetcode/two_pointers/middle_linked_list.cpp
    leetcode/two_pointers/palindrome_linked_list.cpp
    leetcode/two_pointers/remove_duplicates_from_list.cpp
    leetcode/two_pointers/remove_duplicates_from_list_II.cpp
    leetcode/two_pointers/remove_duplicates_II.cpp
    leetcode/two_pointers/remove_elements.cpp
    leetcode/two_pointers/remove_nth_node.cpp
    leetcode/two_pointers/rotate_list.cpp
    leetcode/two_pointers/squares.cpp
    leetcode/two_pointers/three_sum.cpp
    leetcode/two_pointers/three_sum_closest.cpp
    PARENT_SCOPE)
